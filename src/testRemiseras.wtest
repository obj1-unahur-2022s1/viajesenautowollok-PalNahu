/*
 * Los test esta muy bien
 * Buena decision de agrupar por ojetos en forma independiente
 */

import clientes.*
import remiseras.*
import oficinaDeLaCooperativa.*
test "viaje con remisera Roxana a una distancia de 10 kilómetros"{
	assert.equals(180, roxana.precioViaje(ludmila, 10))
	assert.equals(300, roxana.precioViaje(anaMaria, 10))
	assert.equals(220, roxana.precioViaje(teresa, 10))
	
}


test "viaje con remisera Gabriela a una distancia de 10 kilómetros"{
	assert.equals(216, gabriela.precioViaje(ludmila, 10))
	assert.equals(360, gabriela.precioViaje(anaMaria, 10))
	assert.equals(264, gabriela.precioViaje(teresa, 10))
}

test "viaje con remisera Mariela a una distancia de 10 kilómetros"{
	assert.equals(180, mariela.precioViaje(ludmila, 10))
	assert.equals(300, mariela.precioViaje(anaMaria, 10))
	assert.equals(220, mariela.precioViaje(teresa, 10))
}

test "viaje con remisera Juana a una distancia de 10 kilómetros"{
	assert.equals(200, juana.precioViaje(ludmila, 10))
	assert.equals(200, juana.precioViaje(anaMaria, 10))
	assert.equals(200, juana.precioViaje(teresa, 10))
}






test "viaje con remisera Roxana a una distancia de 2 kilómetros"{
	assert.equals(36, roxana.precioViaje(ludmila, 2))
	assert.equals(60, roxana.precioViaje(anaMaria, 2))
	assert.equals(44, roxana.precioViaje(teresa, 2))
	
}


test "viaje con remisera Gabriela a una distancia de 2 kilómetros"{
	assert.equals(43.20, gabriela.precioViaje(ludmila, 2))
	assert.equals(72, gabriela.precioViaje(anaMaria, 2))
	assert.equals(52.80, gabriela.precioViaje(teresa, 2))
}

test "viaje con remisera Mariela a una distancia de 2 kilómetros"{
	assert.equals(50, mariela.precioViaje(ludmila, 2))
	assert.equals(60, mariela.precioViaje(anaMaria, 2))
	assert.equals(50, mariela.precioViaje(teresa, 2))
}

test "viaje con remisera Juana a una distancia de 2 kilómetros"{
	assert.equals(100, juana.precioViaje(ludmila, 2))
	assert.equals(100, juana.precioViaje(anaMaria, 2))
	assert.equals(100, juana.precioViaje(teresa, 2))
}






test "Lucía reemplaza a la remisera Mariela y Melina reemplaza a la clienta Ludmila por un viaje de 10 kliómetros"{
	lucia.estaReemplazando(mariela)
	melina.TrabajaPara(ludmila)
	assert.equals(150, lucia.precioViaje(melina, 10))
	
}

test "Lucía reemplaza a la remisera Mariela y Melina reemplaza a la clienta Ludmila por un viaje de 1 kliómetro"{
	lucia.estaReemplazando(mariela)
	melina.TrabajaPara(ludmila)
	assert.equals(50, lucia.precioViaje(melina, 1))
	
}




test "Lucía reemplaza a la remisera Gabriela y Melina reemplaza a la clienta Ludmila por un viaje de 10 kliómetros"{
	lucia.estaReemplazando(gabriela)
	melina.TrabajaPara(ludmila)
	assert.equals(180, lucia.precioViaje(melina, 10))
	
}

test "Lucía reemplaza a la remisera Gabriela y Melina reemplaza a la clienta Ludmila por un viaje de 1 kliómetro"{
	lucia.estaReemplazando(gabriela)
	melina.TrabajaPara(ludmila)
	assert.equals(18, lucia.precioViaje(melina, 1))
	
}


test "la primera opcion de remisera es Roxana y la segunda opcion es Juana y el viaje es para ana María"{
	oficina.asignarRemiseras(roxana, juana)
	assert.equals(juana, oficina.remiseraElegidaParaViaje(anaMaria, 10))
}

test "la primera opcion de remisera es Roxana y la segunda opcion es Juana y el viaje es para Teresa"{
		oficina.asignarRemiseras(roxana, juana)
		assert.equals(roxana, oficina.remiseraElegidaParaViaje(teresa, 10))
}

test "la primera opcion de remisera es Roxana y la segunda opcion es Juana y el viaje es para Teresa y el viaje es de 4 kilómetros"{
		oficina.asignarRemiseras(roxana, juana)
		assert.equals(roxana, oficina.remiseraElegidaParaViaje(teresa, 4))
}

